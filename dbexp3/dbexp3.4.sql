-- 写出下列应用对应的SQL语句，并将查询语句定义为视图。视图名根据题号依次命名为V47,V50,V53,V56,V59。
62
) 查询学生总人数 。 65
) 查询平均成绩大于84的学生学号与姓名 ， 按学号排序 。 68
) 查询每年都修了课程的学生人数 ， 列出年份与人数 ， 按年份升序排列 。 71
) 查询从2016年开始 ， 各个学期选修了课程的学生人数 ， 列出年份 、 学期与人数 ， 按年份与学期排序 。 74
) 查询2018年 "大学物理" 课程每个班及其平均成绩(用round函数取整) ， 按班名排序 。 CREATE VIEW V62 AS
SELECT
    COUNT(*) AS TOTAL_STUDENT
FROM
    STUDENT;

CREATE VIEW V65 AS
SELECT
    TAKES.ID,
    STUDENT.NAME
FROM
    TAKES
    JOIN STUDENT ON TAKES.ID = STUDENT.ID
GROUP BY
    TAKES.ID,
    STUDENT.NAME
HAVING
    AVG(TAKES.GRADE) > 84
ORDER BY
    TAKES.ID;

CREATE VIEW V68 AS
SELECT
    TAKES.YEAR,
    COUNT(*) AS NUM_STUDENT
FROM
    TAKES
GROUP BY
    TAKES.YEAR
HAVING
    COUNT(DISTINCT TAKES.ID) = (
        SELECT
            COUNT(*)
        FROM
            STUDENT
    )
ORDER BY
    TAKES.YEAR;

CREATE VIEW V71 AS
SELECT
    TAKES.YEAR,
    TAKES.SEMESTER,
    COUNT(DISTINCT TAKES.ID) AS NUM_STUDENT
FROM
    TAKES
WHERE
    TAKES.YEAR >= 2016
GROUP BY
    TAKES.YEAR,
    TAKES.SEMESTER
ORDER BY
    TAKES.YEAR,
    TAKES.SEMESTER;

CREATE VIEW V74 AS
SELECT
    SECTION.SEC_ID,
    CLASS.CLASS_NAME,
    ROUND(AVG(TAKES.GRADE)) AS AVG_GRADE
FROM
    TAKES
    JOIN SECTION ON TAKES.COURSE_ID = SECTION.COURSE_ID
    AND TAKES.SEC_ID = SECTION.SEC_ID
    AND TAKES.SEMESTER = SECTION.SEMESTER
    AND TAKES.YEAR = SECTION.YEAR
    JOIN CLASS ON SECTION.COURSE_ID = CLASS.COURSE_ID
    AND SECTION.SEC_ID = CLASS.SEC_ID
    AND SECTION.SEMESTER = CLASS.SEMESTER
    AND SECTION.YEAR = CLASS.YEAR
WHERE
    SECTION.COURSE_ID = 'PH210'
    AND SECTION.SEMESTER = 'Fall'
    AND SECTION.YEAR = 2018
GROUP BY
    SECTION.SEC_ID,
    CLASS.CLASS_NAME
ORDER BY
    SECTION.SEC_ID;